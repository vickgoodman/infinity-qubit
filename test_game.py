#!/usr/bin/env python3
"""
Test script to check if all components work
"""

def test_imports():
    try:
        import tkinter as tk
        print("‚úÖ Tkinter: OK")
    except ImportError:
        print("‚ùå Tkinter: FAILED")
        return False

    try:
        import numpy as np
        print("‚úÖ NumPy: OK")
    except ImportError:
        print("‚ùå NumPy: FAILED - Run: pip install numpy")
        return False

    try:
        import qiskit
        print("‚úÖ Qiskit: OK")
    except ImportError:
        print("‚ùå Qiskit: FAILED - Run: pip install qiskit")
        return False

    try:
        from qiskit_aer import Aer
        print("‚úÖ Qiskit Aer: OK")
    except ImportError:
        print("‚ùå Qiskit Aer: FAILED - Run: pip install qiskit-aer")
        return False

    try:
        import json
        with open('levels.json', 'r') as f:
            levels = json.load(f)
        print(f"‚úÖ Levels JSON: OK ({len(levels)} levels loaded)")
    except FileNotFoundError:
        print("‚ùå levels.json: NOT FOUND")
        return False
    except json.JSONDecodeError as e:
        print(f"‚ùå levels.json: INVALID JSON - {e}")
        return False

    try:
        from main import QubitPuzzleGame
        print("‚úÖ Main game class: OK")
    except ImportError as e:
        print(f"‚ùå Main game class: FAILED - {e}")
        return False

    try:
        from game_tutorial import show_tutorial
        print("‚úÖ Tutorial module: OK")
    except ImportError:
        print("‚ö†Ô∏è Tutorial module: Optional, but recommended")

    return True

if __name__ == "__main__":
    print("üî¨ Testing Qubit Puzzle Solver Components...")
    print("-" * 50)

    if test_imports():
        print("-" * 50)
        print("‚úÖ All components working! Run: python run_game.py")
    else:
        print("-" * 50)
        print("‚ùå Some components failed. Fix the issues above.")
